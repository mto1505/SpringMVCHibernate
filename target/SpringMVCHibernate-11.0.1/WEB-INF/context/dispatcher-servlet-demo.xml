<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:jpa="http://www.springframework.org/schema/data/jpa"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd           
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
    <!-- Activates scanning of @Repository and @Service and @Component -->
  
    <context:component-scan base-package="com.mycompany.springmvchibernate.Controller,com.mycompany.springmvchibernate.Controller.*,com.mycompany.springmvchibernate.Service, com.mycompany.springmvchibernate.API,com.mycompany.springmvchibernate.Config" />
    
    <annotation-driven/>
  
    <!-- Resolves views selected for rendering by @Controller to .jsp resources in the /WEB-INF/views/ directory-->
    <beans:bean    
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>
    
    
    <jpa:repositories base-package="com.mycompany.springmvchibernate.Repositories"/>
   
    <!-- Configure the entity manager factory bean -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="packagesToScan" value="com.mycompany.springmvchibernate" />
        <beans:property name="jpaVendorAdapter">    
            <!-- Create default configuration for Hibernate -->
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <beans:property name="showSql" value="true"/>
                <beans:property name="generateDdl" value="false"/>
                <beans:property name="databasePlatform" value="org.hibernate.dialect.SQLServerDialect"/>
                
                <!--<property name="database" value="SQL"/> 
                <property name ="jpaPropertyMap">
                 <map>
                <entry key="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
                <entry key="hibernate.hbm2ddl.auto" value="update"/>
                <entry key="hibernate.format_sql" value="true"/>
            <   /map>
                </property>  
                -->
            </beans:bean>
        </beans:property>
        <!-- Set JPA properties -->
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</beans:prop>
                <beans:prop key="javax.persistence.schema-generation.database.action">none</beans:prop>
                <beans:prop key="hibernate.ejb.use_class_enhancer">false</beans:prop>
            </beans:props>
        </beans:property>
       
    </beans:bean>
    
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
        <beans:property name="url" value="jdbc:sqlserver://localhost\\SQLMINHTO:1433;databaseName=QuanLyBaoDuongDemo" />
        <beans:property name="username" value="minhto" />
        <beans:property name="password" value="minhto123"/>
    </beans:bean >
    
    <!-- Hibernate 4 SessionFactory Bean definition (SQL SEVER) -->
   
    <!--    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
   <beans:property name="dataSource" ref="dataSource" />
   <beans:property name="annotatedClasses">
       <beans:list>
           
        <beans:value> com.mycompany.springmvchibernate.ChiTietTrangThaiKhiTiepNhanXe</beans:value>
        <beans:value> com.mycompany.springmvchibernate.NhaCungCap</beans:value>
        <beans:value> com.mycompany.springmvchibernate.XeMay</beans:value>
        <beans:value> com.mycompany.springmvchibernate.NhanVien</beans:value>
        <beans:value> com.mycompany.springmvchibernate.LinhKien</beans:value>
        <beans:value> com.mycompany.springmvchibernate.DichVuBaoDuong</beans:value>
        <beans:value> com.mycompany.springmvchibernate.Quyen</beans:value>
        <beans:value> com.mycompany.springmvchibernate.Sysdiagrams</beans:value>
        <beans:value> com.mycompany.springmvchibernate.PhuTungCanKiemTra</beans:value>
        <beans:value> com.mycompany.springmvchibernate.LoaiXe</beans:value>
        <beans:value> com.mycompany.springmvchibernate.ChiTietThayTheLinhKien</beans:value>
        <beans:value> com.mycompany.springmvchibernate.TaiKhoan</beans:value>
        <beans:value> com.mycompany.springmvchibernate.DonBaoDuong</beans:value>
        <beans:value> com.mycompany.springmvchibernate.ChiTietDonBaoDuong</beans:value>
        <beans:value> com.mycompany.springmvchibernate.LoaiTrangThaiPhuTung</beans:value>
        <beans:value> com.mycompany.springmvchibernate.KhachHang</beans:value>
       </beans:list>
   </beans:property>
   <beans:property name="hibernateProperties">
       <beans:props>
           <beans:prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect
           </beans:prop>
           <beans:prop key="hibernate.show_sql">true</beans:prop>
           <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>  
           <beans:prop key="hibernate.format_sql">true</beans:prop>
       </beans:props>
   </beans:property>
    <property name="configLocation" value="classpath:hibernate.cfg.xml"/> -->
 
    <!-- Configure the transaction manager bean -->

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory" />
    </beans:bean>
  
    
    <!--
    <mvc:interceptors>
        <bean id="menuHandleInterceptor" class="com.mycompany.springmvctest.interceptor.MenuHandleInterceptor"/>
    </mvc:interceptors>
    -->
    <resources mapping="/template/**" location="/template/"></resources>
      
           
   
</beans:beans>
