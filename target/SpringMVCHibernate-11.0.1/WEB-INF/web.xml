<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    
    <display-name>spring-mvc</display-name>
    <welcome-file-list>
        <welcome-file>/WEB-INF/views/index.jsp</welcome-file>
        <welcome-file>/WEB-INF/views/index.html</welcome-file>
    </welcome-file-list>

    <!-- After initialization of spring-mvc DispatcherServlet, 
    the framework will try to load the application context from a file named [servlet-name]-servlet.xml located in the application's WebContent/WEB-INF directory.-->
    <!-- DispatcherServlet definition goes here 
    (If you do not want to go with default filename as [servlet-name]-servlet.xml and default location as WebContent/WEB-INF)-->
    
    <!--   ánh xạ các yêu cầu mà bạn muốn DispatcherServlet xử lý(Process application requests)-->
    
     <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    
    <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
    <!-- giá trị này cho Spring container biết location của file chứa cấu hình ứng dụng-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/context/applicationContext.xml,
             /WEB-INF/context/applicationContext-persistence.xml,  
            <!--    /WEB-INF/context/security-config.xml -->
        </param-value>
    </context-param>
    
    <!-- Log4j -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/log4j.xml</param-value>
    </context-param>
   <!--  
     <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/main/resources/log4j.xml</param-value>
    </context-param> -->

    <listener>
        <listener-class>
            com.mycompany.springmvchibernate.Config.Log4jConfigListener
        </listener-class>
    </listener>
   
    <!-- <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>dev</param-value>
    </context-param>
    
    -->
    <!--Đăng ký springSecurityFilterChain Bộ lọc cho mọi URL trong ứng dụng của bạn-->
    <!-- Spring security Filter Chain-->
     
    <!-- <filter>
       <filter-name>springSecurityFilterChain</filter-name>
       <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
   </filter>
   <filter-mapping>
       <filter-name>springSecurityFilterChain</filter-name>
       <url-pattern>/*</url-pattern>
       <dispatcher>REQUEST</dispatcher>
       <dispatcher>ERROR</dispatcher>
   </filter-mapping>
    -->
     
     <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/context/dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--CKFINDER-->
    <servlet>  
		<servlet-name>ConnectorServlet</servlet-name>
		<servlet-class>com.ckfinder.connector.ConnectorServlet</servlet-class>
		<init-param>
			<description>
				Path to configuration file can be relative path inside application,
				absolute path on local file system or UNC path.
			</description>
			<param-name>XMLConfig</param-name>
			<param-value>/WEB-INF/config.xml</param-value>
		</init-param>
<!-- 		<init-param> -->
<!-- 			<param-name>debug</param-name> -->
<!-- 			<param-value>false</param-value> -->
<!-- 		</init-param> -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConnectorServlet</servlet-name>
		<url-pattern>
			/statics/ckfinder/core/connector/java/connector.java
		</url-pattern>
	</servlet-mapping> 
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
   
    
  
    <!--
    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
        <init-param>
            <param-name>config</param-name>
            <param-value>/WEB-INF/struts-config.xml</param-value>
        </init-param>
        
        <init-param>
            <param-name>debug</param-name>
            <param-value>2</param-value>
        </init-param>
        
        <init-param>
            <param-name>detail</param-name>
            <param-value>2</param-value>
        </init-param>
        
        <load-on-startup>2</load-on-startup>
    </servlet>
    -->
    
    
    <!--
      - Loads the root application context of this web app at startup.
      - The application context is then available via
      - WebApplicationContextUtils.getWebApplicationContext(servletContext).
    -->
        
    <!--Thêm a ContextLoaderListenertải bảo mật-config-xml -->
    <!-- Để spring load context tại thời điểm deploy-->
    
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
    <!-- URL ENCODE -->
    <filter>  
    <filter-name>encodingFilter</filter-name>  
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
    <init-param>  
       <param-name>encoding</param-name>  
       <param-value>UTF-8</param-value>  
    </init-param>  
    <init-param>  
       <param-name>forceEncoding</param-name>  
       <param-value>true</param-value>  
    </init-param>  
</filter>  
<filter-mapping>  
    <filter-name>encodingFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
</filter-mapping> 
    
</web-app>