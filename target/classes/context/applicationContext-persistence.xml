<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:jpa="http://www.springframework.org/schema/data/jpa"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd           
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
    <!-- Activates scanning of @Repository and @Service and @Component -->
       <context:property-placeholder location="classpath:hibernate-config.properties"/>
      <!--//main/resource/hibernate-config.properties -->
     
     <context:component-scan base-package="com.mycompany.springmvchibernate.**,com.mycompany.springmvchibernate.Repositories,com.mycompany.springmvchibernate.Repositories.*,
     com.mycompany.springmvchibernate,com.mycompany.springmvchibernate.Entity.*,com.mycompany.springmvchibernate.Controller,
     com.mycompany.springmvchibernate.Controller.*,com.mycompany.springmvchibernate.Service.Impl.*,com.mycompany.springmvchibernate.API,com.mycompany.springmvchibernate.Config.*,com.mycompany.springmvchibernate.Dao.*,com.mycompany.springmvchibernate.DaoImp.*, 
     com.mycompany.springmvchibernate.SpringValidator.*,com.mycompany.springmvchibernate.Event.*,com.mycompany.springmvchibernate.BeanValidator.*,com.mycompany.springmvchibernate.AnnotationValidator.*, com.mycompany.springmvchibernate.Filter.*"/>
      <tx:annotation-driven/>
      <context:annotation-config/>

    

	
 	<jpa:repositories base-package="com.mycompany.springmvchibernate.Repositories"/>
    <!-- Resolves views selected for rendering by @Controller to .jsp resources in the /WEB-INF/views/ directory-->
 
    <!-- <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>
     -->
    	
    <jpa:repositories base-package="com.mycompany.springmvchibernate.Repositories"/>
    <!-- Configure the entity manager factory bean -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="packagesToScan" value="com.mycompany.springmvchibernate.Entity" />
        <beans:property name="jpaVendorAdapter">    
            <!-- Create default configuration for Hibernate -->
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">    
<!--             	 <beans:property name="showSql" value="${hibernate.show_sql}"/>  -->
                 <beans:property name="generateDdl" value="true"/>
<!--                 <beans:property name="databasePlatform" value="org.hibernate.dialect.SQLServerDialect"/>  -->
            </beans:bean>

        </beans:property>
        <!-- Set JPA properties -->
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
                <!--<beans:prop key="hibernate.max_fetch_depth" >${hibernate.max_fetch_depth}</beans:prop>  -->
                <!--<beans:prop key="hibernate.fetch_size">${hibernate.fetch_size}</beans:prop>-->
                <!--<beans:prop key="hibernate.batch_size">${hibernate.batch_size}</beans:prop>-->
                <beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
                <beans:prop key="hibernate.format_sql">${hibernate.format_sql}</beans:prop>
                <beans:prop key="hibernate.ddl-auto">${hibernate.hbm2ddl.auto}	</beans:prop>
             <!--    <beans:prop key="hibernate.default_schema">dbo</beans:prop> -->
                
            </beans:props>
            <!-- <beans:props>  
                <beans:prop key="hibernate.ejb.use_class_enhancer">false</beans:prop>
            </beans:props> -->
        </beans:property>
        
       
    </beans:bean>
    
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <beans:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
        <beans:property name="url" value="jdbc:sqlserver://localhost\SQLMINHTO:1433;databaseName=AppleShop" />
        <beans:property name="username" value="minhto " />
        <beans:property name="password" value="minhto123"/>
    </beans:bean >
  
 
    <!-- Configure the transaction manager bean -->

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory" />
    </beans:bean>
  
     <interceptors> 
	 
	 <beans:bean id="shoppingCartHandlerInterceptor" class="com.mycompany.springmvchibernate.interceptor.ShoppingCartHandlerInterceptor">
	 	
	 </beans:bean> 
		
	</interceptors>
    <!--
    <mvc:interceptors>
        <bean id="menuHandleInterceptor" class="com.mycompany.springmvctest.interceptor.MenuHandleInterceptor"/>
    </mvc:interceptors>
    -->
<!--     <resources mapping="/template/**" location="/template/"></resources>
       -->
           
   
</beans:beans>
